// api/upload.js
import { VercelBlob } from '@vercel/blob';
import formidable from 'formidable';
import fs from 'fs';

export const config = {
  api: {
    bodyParser: false,
  },
};

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).send({ message: 'Only POST requests allowed' });
  }

  const form = new formidable.IncomingForm();
  form.parse(req, async (err, fields, files) => {
    if (err) {
      return res.status(500).json({ error: 'Error parsing form data' });
    }

    const file = files.file; // Assuming file field name is 'file'

    try {
      const blob = await VercelBlob.fromStream(fs.createReadStream(file.path));
      const blobURL = await blob.upload({
        bucket: 'project-3-blob', // Replace with your actual bucket name
        key: `recordings/${Date.now()}-${file.name}`,
      });

      res.status(200).json({ url: blobURL });
    } catch (error) {
      console.error(error);
      res.status(500).json({ error: 'Failed to upload file' });
    }
  });
}

