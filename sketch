//Ορίζουμε τις μεταβλητές
//Μεταβλητές για τον κάνναβο
let cols = 25;
let rows = 15;
let mygrid = [];
let imgmap;

//Μεταβλητή για κλικ
let clickCounts = [];

//Μεταβλητές για ήχο
let sounds = [];
let vol;
let sound22;
let amplitude;
var soundrecord;
var recorder;
var  button;
let isRecording = false;
let eventsound;

//Μεταβλητές για εικόνες
let images = [];
let uploadButton;
let input;
let uploadedImage;
let imgUploadFinished = false;
let uploadPhoto;
let img;
let soundImage;



//Ανεβάζουμε την εικόνα και τον ήχο
function preload() {
    imgmap = loadImage('https://mariatschumi.github.io/project-3/photos/map%20athens.jpg');
}

//Φτιάχνουμε τον αρχικό κάναβο
function createGrid() {
    let cellWidth = imgmap.width / cols;
    let cellHeight = imgmap.height / rows;

    for (let i = 0; i < cols; i++) {
        let x = i * cellWidth;
      
        for (let j = 0; j < rows; j++) {
            let y = j * cellHeight;
          
          stroke(255);
            strokeWeight(2);
            noFill();
            rect(x+cellWidth, y+cellHeight, cellWidth, cellHeight);
        }
    }
  textAlign(CENTER,CENTER);
  textSize(15);
  fill('cornflowerblue');
  noStroke();
  
  for (let i = 1; i < cols; i++) {
    let x = i * cellWidth;
    text(i,x+cellWidth/2,25);}
  for (let j = 1; j < rows+1; j++) {
            let y = j * cellHeight;
          text(j,25,y+cellHeight/2);}
}


function setup() {
  
    createCanvas(imgmap.width+width/cols, imgmap.height+200); 
    image(imgmap, width/cols, imgmap.height/rows);
 
  recorder = new p5.SoundRecorder();
  soundrecord= new p5.SoundFile();
  
  // Αφήνω να χρησιμοποιήσει το μικρόφωνο του χρήστη
  let mic = new p5.AudioIn();
  mic.start();
  recorder.setInput(mic);
  createGrid();
  soundcell();
  
  button = createButton('RECORD YOUR EVENT');
  button.position(width/cols,imgmap.height+100);
  button.mousePressed(toggleRecording);
  
   uploadButton = createButton('UPLOAD YOUR PHOTO');
    uploadButton.position(width/cols, imgmap.height + 150);
    uploadButton.mousePressed(openFileDialog);

    input = createFileInput(handleFile);
    input.position(width/cols, imgmap.height + 130);
    input.hide(); // Hide it initially

}

// Function to handle file upload dialog
function openFileDialog() {
    input.show();
    input.elt.click(); // Trigger file input click
    input.hide(); // Hide it again after clicking
}

// Function to handle uploaded file
function handleFile(file) {
    if (file.type === 'image') {
        uploadedImage = loadImage(file.data, () => {
            imgUploadFinished = true;
             fill(0);
      rectMode(CENTER);
          noStroke();
      rect(width/2,imgmap.height+100,textWidth('We have the music! Now double click on the cell you are')*2,50);
  textAlign(CENTER,CENTER);
  textSize(25);
  fill('cornflowerblue');
  noStroke();
        text('We have the photo! Now click on the cell you are',width/2,imgmap.height+100)
        });
    }
}




function toggleRecording() {
    if (!isRecording) {
        // Start recording
        recorder.record(soundrecord);
        isRecording = true;
        button.html('Stop Recording');
      
    } else {
        // Stop recording
        recorder.stop();
        isRecording = false;
        recordingFinished = true;
        button.html('RECORD YOUR EVENT');
      fill(0);
      rectMode(CENTER);
      noStroke();
      rect(width/2,imgmap.height+100,textWidth('We have the music! Now double click on the cell you are')*2,50); //Προκειμένου να κρύβει το άλλο κείμενο
      textAlign(CENTER,CENTER);
  textSize(25);
  fill('cornflowerblue');
  noStroke();
        text('We have the music! Now double click on the cell you are',width/2,imgmap.height+100)
      
    }
}
  
function soundcell(){
  //Δημιουργούμε 2Darrays για να ορίσουμε κάθε κέλί με άλλες ιδιότητες
    for (let i = 1; i < cols; i++) {
        clickCounts[i] = []; 
        
        sounds[i] = [];
        images[i] = [];
        for (let j = 1; j < rows; j++) {
            clickCounts[i][j] = 0; //μετράει πόσα κλικ κάνουμε σε κάθε κελί
        
       if (soundrecord){
              sounds[i][j] = eventsound;
            }
          else {
                sounds[i][j] = null; // Οπότε οι υπόλοιποι ήχοι των κελιών είναι κενοί
            }
          if (uploadedImage){
            images[i][j]=!null;
          }else{ images[i][j] = null; }// Οπότε οι υπόλοιπες εικόνες των κελιών είναι κενές
            
        }
    }
}

//Σε αυτό το function ρυθμίζουμε αν γίνει κλικ μέσα σε ένα κελί να παίζει τον ήχο. Μέχρι στιγμής παίζει μόνο στο κελί 2,2. Επίσης μετράει τα κλικ που γίνονται, ώστε στο πρώτο κλικ να παίζει ο ήχος και στο δεύτερο να σταματάει.
function mouseClicked() {
    let cellWidth = imgmap.width / cols;
    let cellHeight = imgmap.height / rows;

    

    /*let i = floor(mouseX / cellWidth);
    let j = floor(mouseY / cellHeight);*/

    // Check boundaries and mouse position
    //if (i >= 1 && i < cols && j >= 1 && j < rows && mouseY < imgmap.height) {
   for (let i = 1; i < cols; i++) {
    let x = i * cellWidth;
    
  for (let j = 1; j < rows+1; j++) {
            let y = j * cellHeight;
         

  if (mouseX>x && mouseX<x+cellWidth && mouseY>y && mouseY<y+cellHeight){
        

        // Perform actions based on click count
        if (clickCounts[i][j] === 0 && !soundrecord ) {
           images[i][j] = uploadedImage;
            uploadedImage.save(`myImage${i}${j}`);
           // Draw visual feedback (rectangle) for the clicked cell
        fill(255, 60);
        stroke(255);
        rect(i*cellWidth+cellWidth/2 , j*cellHeight+cellHeight/2 , cellWidth, cellHeight);
        } if (clickCounts[i][j] === 1 && !uploadedImage) {
           sounds[i][j] = soundrecord;
            saveSound(soundrecord, `myRecording${i}${j}.wav`);
           // Draw visual feedback (rectangle) for the clicked cell
        fill(100,100,250);
        stroke(255);
        rect(i*cellWidth+cellWidth/2 , j*cellHeight+cellHeight/2 , cellWidth, cellHeight);
        } clickCounts[i][j]++; // Increment click count for this cell

        // Debugging: Log clickCounts for verification
        console.log(`Click count for cell (${i}, ${j}):`, clickCounts[i][j]);

       
    }
}
}
}