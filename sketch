//Ορίζουμε τις μεταβλητές
//Μεταβλητές για τον κάνναβο
let cols = 25;
let rows = 15;
let mygrid = [];
let img;

//Μεταβλητή για κλικ
let clickCounts = [];

//Μεταβλητές για ήχο
let sounds = [];
let sound22;
let amplitude;
var soundrecord;
var recorder;
var  button;
let isRecording = false;
let recordingDuration = 30000; // 30 seconds
let eventsound;

//Μεταβλητή για κύμα
var waves = [];

//Ανεβάζουμε την εικόνα και τον ήχο
function preload() {
    img = loadImage('https://mariatschumi.github.io/project-3/photos/map%20athens.jpg');
    sound22 = loadSound('https://mariatschumi.github.io/project-3/sounds/sound22.mp3');
  if(soundrecord && typeof i !== 'undefined' && typeof j !== 'undefined') {
    eventsound = loadSound(`https://mariatschumi.github.io/project-3/sounds/myRecording${i}${j}.wav`);
}

}

//Φτιάχνουμε τον αρχικό κάναβο
function createGrid() {
    let cellWidth = width / cols;
    let cellHeight = img.height / rows;

    for (let i = 0; i < cols; i++) {
        let x = i * cellWidth;
      
        for (let j = 0; j < rows; j++) {
            let y = j * cellHeight;
          
          stroke(255);
            strokeWeight(2);
            noFill();
            rect(x+cellWidth, y+cellHeight, cellWidth, cellHeight);
          
        }
    }
  textAlign(CENTER,CENTER);
  textSize(15);
  fill('cornflowerblue');
  noStroke();
  
  for (let i = 1; i < cols; i++) {
    let x = i * cellWidth;
    text(i,x+cellWidth/2,25);}
  for (let j = 1; j < rows+1; j++) {
            let y = j * cellHeight;
          text(j,25,y+cellHeight/2);}
}




function setup() {
    createCanvas(img.width+width/cols, img.height+200); //Ορίζουμε την εικόνα ως καμβά
     image(img, width/cols, img.height/rows);
 
   
  
    amplitude = new p5.Amplitude(); //Ορίζουμε ως νέα μεταβλητή το εύρος του κύματος
  recorder = new p5.SoundRecorder();
  soundrecord= new p5.SoundFile();
  
  // Αφήνω να χρησιμοποιήσει το μικρόφωνο του χρήστη
  let mic = new p5.AudioIn();
  mic.start();
  recorder.setInput(mic);
  createGrid();
  soundcell();
  
  button = createButton('RECORD YOUR EVENT');
  button.position(width/cols,img.height+100);
  button.mousePressed(toggleRecording);
}

function draw() {
  
     drawWaves();
  
}

function toggleRecording() {
    if (!isRecording) {
        // Start recording
        recorder.record(soundrecord);
        isRecording = true;
        button.html('Stop Recording');

        // Set a timeout to stop recording after recordingDuration milliseconds
        setTimeout(() => {
            if (isRecording) {
                recorder.stop();
                isRecording = false;
                button.html('Start Recording');
              fill('cornflowerblue');
        textSize(25);
        text('click on the cell you are',width/2,img.height+100);
            }
        }, recordingDuration);
    } else {
        // Stop recording
        recorder.stop();
        isRecording = false;
        button.html('Start Recording');
    }
}





function soundcell(){
  //Δημιουργούμε 2Darrays για να ορίσουμε κάθε κέλί με άλλες ιδιότητες
    for (let i = 1; i < cols; i++) {
        clickCounts[i] = []; 
        mygrid[i] = []; 
        sounds[i] = [];
        for (let j = 1; j < rows; j++) {
            clickCounts[i][j] = 0; //μετράει πόσα κλικ κάνουμε σε κάθε κελί

            if (i === 2 && j === 9) {
                sounds[i][j] = sound22; // Βάζουμε στο κελί2,9 τον ήχο sound29 γιατί αυτόν έχουμε μέχρι στιγμής
            } 
          else if (soundrecord){
              sounds[i][j] = eventsound;
            }
          else {
                sounds[i][j] = null; // Οπότε οι υπόλοιποι ήχοι των κελιών είναι κενοί
            }
            let cellWidth = width/ cols;
            let cellHeight = height / rows;
            mygrid[i][j] = {positionx: i * cellWidth, positiony: j * cellHeight, sound: sounds[i][j]}; // Ορίζουμε το 2Darray των κελιών ως αντικείμενο με ιδιότητες x,y και ήχου
        }
    }
}

//Σε αυτό το function ρυθμίζουμε αν γίνει κλικ μέσα σε ένα κελί να παίζει τον ήχο. Μέχρι στιγμής παίζει μόνο στο κελί 2,2. Επίσης μετράει τα κλικ που γίνονται, ώστε στο πρώτο κλικ να παίζει ο ήχος και στο δεύτερο να σταματάει.
function mouseClicked() {
  
    let cellWidth = width / cols;
    let cellHeight = img.height / rows;

    let i = floor(mouseX / cellWidth);
    let j = floor(mouseY / cellHeight);

    if (i >= 1 && i < cols && j >= 1 && j < rows) {
        
        clickCounts[i][j]++; //Αυξάνεται κάθε φορά κατά 1 ο αριθμός των κλικ
      
      //Σε κάθε κλικ αυξάνεται λίγο το opacity του κελιού ώστε στο τέλος να είναι ενας λευκός καμβάς.
            fill(255, 50);
            stroke(255);
            rect(i * cellWidth, j * cellHeight, cellWidth, cellHeight);}
  if (clickCounts[i][j] == 1) {
    
          saveSound(soundrecord, `myRecording${i}${j}.wav`);
   
            }
  
        if (clickCounts[i][j] == 2 ) {
          
           //Στο πρώτο κλικ παίζει ο ήχος
             
    
            if (sounds[i][j]!==null && !sounds[i][j].isPlaying()) {
                sounds[i][j].play();
            }
          
          //Στο δεύτερο κλικ σταματάει ο ήχος
        } else if (clickCounts[i][j] == 3) {
            
            if (sounds[i][j] && sounds[i][j].isPlaying()) {
                sounds[i][j].stop(); 
            } 
           
            clickCounts[i][j] = 0; //Ξαναεπιστρέφει στο 0 ο αριθμός των κλικ
        }      
        }
    


function drawWaves() {
   
  let vol = amplitude.getLevel()*500;//Για να κάνουμε τα κύμτα βρίσκουμε το εύρος από τον ήχο και το ορίζουμε ως vol. Το πολλαπλασιάζουμε γιατί ήταν πολύ μικρό. 
  
  let cellWidth = width / cols;
    let cellHeight = img.height / rows;

//Αν παίζει ο ήχος γίνονται τα κύματα. Οπότε ορίζονται, αν παίζει ο ήχος σε κάθε κελί, ως objects
  for (let i = 1; i < cols; i++){
     for (let j = 1; j < rows; j++) {
       
       
    if (sounds[i][j] && sounds[i][j].isPlaying()){
  waves.push({
                x: mygrid[i][j].positionx + cellWidth / 2,
                y: mygrid[i][j].positiony + cellHeight / 2,
                radius: 0,
                maxRadius: cellWidth,
                speed: 2
            });}
  }
}
  
  for (let m=0; m<waves.length; m++){
    let wave = waves[m];
    noFill();
        stroke(200,50,random(255));
        ellipse(wave.x, wave.y, wave.radius ); 
    

        // Το κύμα αυξάνεται μέχρι η ακτίνα του να είναι ίδια με το πλάτος του κελιού, αν εξαρχής το εύρος του ήχου είναι μικρότερο από το πλάτος του κελιού.
        if (wave.radius < vol ) {
            wave.radius += wave.speed; } else { wave.radius = 0;}
    }   
}