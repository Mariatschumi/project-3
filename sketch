//my p5js file
// Define variables
let cols = 10;
let rows = 5;
let subrows = [];
let subcellHeight;
let mygrid = [];
let img;
let sounds = [];
let clickCounts=[];


function preload() {
    // Preload the image
    img = loadImage('https://mariatschumi.github.io/project-3/photos/map%20athens.png');

    // Preload the sounds
    for (let i = 0; i < 5; i++) {
        sounds[i] = loadSound('https://mariatschumi.github.io/project-3/sounds/sound22.mp3');
    }
}

function setup() {
    createCanvas(img.width, img.height);
    background(255);
    image(img, 0, 0);
  
    
    // Initialize clickCounts array
    for (let i = 0; i < cols; i++) {
        clickCounts[i] = [];
        for (let j = 0; j < rows; j++) {
            clickCounts[i][j] = 0;
        }
    }
  createGrid();
}


function createGrid() {
    let cellWidth = width / cols;
    let cellHeight = height / rows;
    
    for (let i = 0; i < cols; i++) {
        let x = i * cellWidth;
       subrows[i] = [];
        
        for (let j = 0; j < rows; j++) {
          subrows[i][j] = 5;
            let y = j * cellHeight;
            stroke(255);
          strokeWeight(2);
            noFill();
            rect(x, y, cellWidth, cellHeight);
           for (var k = 1;k < subrows[i][j]; k++) {
        let subcellHeight = cellHeight/subrows[i][j];
             stroke(255);
             strokeWeight(1);
           line(x,y+ k * subcellHeight,x+cellWidth,y+ k*subcellHeight);
        }
                }
}
    }

function mouseClicked() {
    let cellWidth = width / cols;
    let cellHeight = height / rows;

    let i = Math.floor(mouseX / cellWidth);
    let j = Math.floor(mouseY / cellHeight);

    if (i >= 0 && i < cols && j >= 0 && j < rows) {
        // Increment the click count for the clicked cell
        clickCounts[i][j]++;
        
        // Calculate the sound index and wrap it if necessary
        let soundIndex = (i + j * cols) % sounds.length;
        let currentSound = sounds[soundIndex];
        
        if (clickCounts[i][j] == 1) {
            // First click: Highlight the cell and play sound
            fill(0, 100);
            stroke(255);
            rect(i * cellWidth, j * cellHeight, cellWidth, cellHeight);
            if (!currentSound.isPlaying()) {
                currentSound.play();
              
            }
        } else if (clickCounts[i][j] == 2) {
            // Second click: Remove highlight and stop sound
            noFill();
            stroke(255);
            rect(i * cellWidth, j * cellHeight, cellWidth, cellHeight);
            if (currentSound.isPlaying()) {
                currentSound.stop();
            }
            // Reset click count for this cell
            clickCounts[i][j] = 0; 
        }
    
        }
}